stages: 
  - test
  - build 
  - upload
  - publish
  
before_script:
  - git submodule sync --recursive
  - git submodule update --init --recursive
  
variables:
  GIT_STRATEGY: fetch
  # or clone
  # fetch or clone only the last 3 commits
  GIT_DEPTH: "3"

#Tests
basetest-linux-i386:
  stage: test 
  script: 
    - lazbuild promet/source/testcases/consoletest.lpi
    - promet/output/i386-linux/consoletest --mandant=help --config-path=./promet/help/config
  tags:
    - linux-i386
webdavtest-linux-i386:
  stage: test 
  script: 
    - lazbuild promet/source/testcases/consoletest_webdav.lpi
    - promet/output/i386-linux/consoletest_webdav --mandant=help --config-path=./promet/help/config
  tags:
    - linux-i386
#Build
build-windows:
  stage: build 
  variables:
#    GIT_STRATEGY: clone
  script: 
    - git submodule sync --recursive
    - bash build.sh all
  tags:
    - windows-i386
  only:
    - master
  artifacts:
    paths:
      - promet/setup/output
upload-windows:
  before_script:
  stage: upload
  script: bash build.sh upload
  dependencies:
    - build-windows
  tags:
    - windows-i386
publish-windows:
  before_script:
  stage: publish
  script: git-bash promet/setup/i386-win32/change_wiki_windows.sh
  dependencies:
    - upload-windows
  tags:
    - windows-i386
  only:
    - tags

build:linux:i386:
  stage: build 
  script: bash build.sh all
  tags:
    - linux-i386
  only:
    - master
  artifacts:
    paths:
      - promet/setup/output

upload:linux:i386:
  before_script:
  stage: upload
  script: bash build.sh upload
  dependencies:
    - build:linux:i386
  tags:
    - linux-i386

build:linux:x86-64:
  stage: build 
  script: bash build.sh all
  tags:
    - linux-x64
  only:
    - master
  artifacts:
    paths:
      - promet/setup/output

upload:linux:x86-64:
  before_script:
  stage: upload
  script: bash build.sh upload
  dependencies:
  - build:linux:i386
  tags:
    - linux-x64

build:linux:arm:
  variables:
    GIT_DEPTH: ""
#    GIT_STRATEGY: clone
  before_script:
    - git submodule sync
    - git submodule foreach git submodule update
    - git submodule update --init --recursive
  stage: build 
  script:
    - git clean -fdx
    - git submodule foreach git reset --hard
    - bash build.sh server
  tags:
    - linux-arm
  only:
    - master
  artifacts:
    paths:
      - promet/setup/output

upload:linux:arm:
  before_script:
  variables:
    GIT_DEPTH: ""
  stage: upload
  script: bash build.sh upload
  dependencies:
  - build:linux:arm
  tags:
    - linux-arm
    
